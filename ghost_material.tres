[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://bm4u5vr2dlot8"]

[sub_resource type="Shader" id="Shader_3bh6r"]
code = "shader_type canvas_item;

uniform float transparency = 0.4;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	// Called for every pixel the material is visible on.
	COLOR = texture(TEXTURE, UV);
	COLOR *= vec4(1,1,1, transparency);
}

//void light() {
//	// Called for every pixel for every light affecting the CanvasItem.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[resource]
shader = SubResource("Shader_3bh6r")
shader_parameter/transparency = 1.0
